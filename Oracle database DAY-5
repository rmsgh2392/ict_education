========================5일차 복습==========================================
1. TO_DATE() 함수
--> 문자타입을 DATE타입으로 변환하는 함수 
-- 사용표현식
-> TO_DATE('문자리터럴' | 문자형식으로 기록된 컬럼명, '문자 각자리별 적용포멧' )
--> 오라클에 설정 되어 있는 날짜 형식이 아닌 문자열(예'20200523')을 DATE타입으로 바꿔줘야 할 경우에 사용한다. 
※주의할점※
TO_DATE함수에 format과 TO_CHAR()에 format 과 엄연히 다르고 사용하는 방식을 주의해야 한다.
TO_CHAR()함수에 format은 날짜데이터나 숫자데이터를 사용자가 바꾸고 싶은 포맷 방식으로 바꿀 수 있지만
TO_DATE에 format은 문자리터럴이('20120302') 있으면 글자 !!각각의 값이 년도인지 월인지 날짜인지 자릿 수를 맞추어서 매칭시켜줘야하며!! 
만약 공백까지 있다면 공백도 맞춰줘야한다. 말 그대로 문자의 !!글자수와 포맷 글자수를 반드시 맞춰서 포맷해줘야 한다.!!
-- TO_CHAR() 의 포멧(출력형식)과 의미가 다름
-- TO_DATE() 의 포멧은 글자 각각이 날짜 무엇으로 바뀌는지를 지정하는 역할을 함
*오라클을 날짜데이터 형식(00/00/00)에 맞지 않으면 문자열로 취급한다!*

*년도 변환에 RR과 YY의 사용의 차이*
->두자리 년도에서 네자리 연도로 바꿀 때 50을 기준으로 
-> 바꿔야할 년도 두 자리가 50미만이면 2000년대를 적용하고
-> 바꿔야한 년도 두 자리가 50이상이면 1900년대를 적용한다.
-> 하지만 현재년도(21)와 바꿀년도 둘다 50 미만이면 Y 와 R 아무거나 사용이 가능하다.
-> BUT 현재년도(21)가 50미만이고 바꿀년도가 50 이상일 때
-> TO_DATE()에서 년도를 바꿀 때 Y 사용시 현재세기 2000년대가 적용이 되고 
                               R 사용시 이전세기 1900년대가 적용이 된다.
 => 결과 :  문자데이터를 날짜데이터로 변환할 때 R을 사용하면되고 2자리에서 4자리로 바꿀 시에는 아무거나 써도 상관없다.

2.DECODE() 함수 
-> 자바에서 SWITCH문에 동작 방식과 동일하다.
-> 표현식 DECODE(계산식 | 컬럼명, 값1 제시, 선택 값1, 값2 제시, 선택 값2, ......... 제시된 값이 모두 아닐때 선택한다. ,[default]   )
-> 예) 주민번호 뒷자리 시작이 1, 3이면 남자 2, 4이면 여자 이면 출력처리
      SELECT EMP_ID, EMP_NAME,
             DECODE(SUBSTR(EMP_NO, 8, 1), '1', '남자', '3', '남자', '2', '여자', '4', '여자') 
        또는 DECODE(SUBSTR(EMP_NO, 8, 1), '1', '남자', '3', '남자', '여자') -- DEFAULT에 1, 3을 제외한 숫자는 성별을 여자로 적용
      FROM EMPLOYEE;
      
3. CASE 표현식
-> CASE함수는 ()가 없으며 자바에 다중 if문과 동작 방식이 동일하다.
-> CASE함수를 사용할 때 반드시 CASE로 시작해서 END를 꼭 뺴먹지 말고 써주고 끝내야 된다.
-> CASE ~ WHEN ~ THEN ~~~~~ [ELSE] END
-> CASE CONDITION WHEN THEN ~~~~ [ELSE] END (위에 CASE와 다르게 CASE바로 뒤에 조건식을 써서 사용할 수 있다.)
-> 예) 급여가 2000000 이하이면 초급 4000000 미만이면 중급 나머진 고급
      SELECT EMP_ID, EMP_NAME,
             CASE SALARY < 2000000 THEN '초급'
                  SALARY < 4000000 THEN '중급'
                  ELSE '고급'
             END
      FROM EMPLOYEE;
      
      SELECT EMP_NAME, JOB_ID, SALARY,
        CASE JOB_ID
            WHEN 'J7' THEN SALARY * 1.1
            WHEN 'J6' THEN SALARY * 1.15
            WHEN 'J5' THEN SALARY * 1.2
            ELSE SALARY * 1.05
        END 인상급여
      FROM EMPLOYEE;
